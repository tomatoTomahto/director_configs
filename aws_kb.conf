
name: C5-sgupta

provider {
    type: aws

    accessKeyId: ${?AWS_ACCESS_KEY_ID}
    secretAccessKey: ${?AWS_SECRET_ACCESS_KEY}

    region: us-west-2

    # regionEndpoint: ec2.us-gov-west-1.amazonaws.com

    subnetId: subnet-15ee7d4d

    securityGroupsIds: sg-6229961b

    instanceNamePrefix: cloudera-director

    rootVolumeSizeGB: 200 # defaults to 50 GB if not specified

    # rootVolumeType: gp2 # OR standard (for EBS magnetic)

    associatePublicIpAddresses: true

}

ssh {
    username: ec2-user # for RHEL image
    privateKey: director_configs/kp.pem
}

common-instance-properties {
    image: ami-b772edd7

    tags {
        owner: sgupta
    }

    ebsVolumeCount : 3
    ebsVolumeType: st1      # Specify either st1, sc1, gp2 or io1 volume type
    ebsVolumeSizeGiB: 500

    bootstrapScriptsPaths: ["director_configs/java8-bootstrap-script.sh"]
}

instances {

    m42x : ${common-instance-properties} {
        type: m4.2xlarge   # requires an HVM AMI
    }

    m44x : ${common-instance-properties} {
        type: m4.4xlarge
    }
}

cloudera-manager {

    instance: ${instances.m42x} {
        tags {
            application: "Cloudera Manager 5"
        }
    }

    javaInstallationStrategy: NONE

    enableEnterpriseTrial: true

    unlimitedJce: true

    krbAdminUsername: "cloudera-scm@SGUPTA-CDH.COM"
    krbAdminPassword: "cloudera"

    repository: "http://archive.cloudera.com/cm5/redhat/7/x86_64/cm/5.13/"
    repositoryKeyUrl: "http://archive.cloudera.com/cm5/redhat/7/x86_64/cm/RPM-GPG-KEY-cloudera"

    csds: [
        "https://archive.cloudera.com/spark2/csd/SPARK2_ON_YARN-2.2.0.cloudera1.jar"
    ]

    configs {
        CLOUDERA_MANAGER {
            KDC_TYPE: "MIT KDC" # OR "Active Directory"
            KDC_HOST: "10.0.0.133"
            SECURITY_REALM: "SGUPTA-CDH.COM"
            KRB_MANAGE_KRB5_CONF: true
            KRB_ENC_TYPES: "aes256-cts aes128-cts"
        }
    }
}

cluster {

    products {
      CDH: 5 # includes Impala and Spark
      KAFKA: 3
      SPARK2: 2
    }

    parcelRepositories: ["http://archive.cloudera.com/cdh5/parcels/5.13/",
                         "http://archive.cloudera.com/kafka/parcels/3.0/",
                         "http://archive.cloudera.com/spark2/parcels/2.2.0.cloudera1/"]

    services: [HDFS, YARN, ZOOKEEPER, HIVE, HUE, OOZIE, 
               #KAFKA,
               IMPALA,
               SPARK_ON_YARN, SPARK2_ON_YARN,
               KUDU]

    masters-1 {
      count: 1

      instance: ${instances.m44x} {
        tags {
          group: master-1
        }
      }

      roles {
        HDFS: [NAMENODE, SECONDARYNAMENODE]
        YARN: [RESOURCEMANAGER, JOBHISTORY]
        ZOOKEEPER: [SERVER]
        HIVE: [HIVESERVER2, HIVEMETASTORE]
        HUE: [HUE_SERVER]
        OOZIE: [OOZIE_SERVER]
        SPARK_ON_YARN: [SPARK_YARN_HISTORY_SERVER]
        SPARK2_ON_YARN: [SPARK2_YARN_HISTORY_SERVER]
        #KAFKA: [KAFKA_BROKER]
        KUDU: [KUDU_MASTER]
        IMPALA: [CATALOGSERVER, STATESTORE]
      }

      configs {
        KUDU {
            KUDU_MASTER {
                fs_wal_dir: "/data0/kudu/masterwal"
                fs_data_dirs: "/data1/kudu/master"
            }
         }
      }
    }

    workers {
      count: 3

      instance: ${instances.m42x} 

      tags {
          group: worker
      }

      roles {
        HDFS: [DATANODE]
        YARN: [NODEMANAGER]
        IMPALA: [IMPALAD]
        KUDU: [KUDU_TSERVER]
      }

      configs {
        KUDU {
          KUDU_TSERVER {
            fs_wal_dir: "/data0/kudu/tabletwal"
            fs_data_dirs: "/data1/kudu/tablet"
          }
        }
      }
    }

    gateways {
      count: 1

      instance: ${instances.m44x} {
        tags {
          group: gateway
        }
      }

      roles {
        HIVE: [GATEWAY]
        YARN: [GATEWAY]
        SPARK_ON_YARN: [GATEWAY]
        SPARK2_ON_YARN: [GATEWAY]
      }
    }
    
}
